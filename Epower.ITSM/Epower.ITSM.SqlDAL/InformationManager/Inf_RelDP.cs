/********************************************************
* Generated By:   zhumc

* Date Generated: 2007年9月26日
* ******************************************************/
using System;
using System.Data;
using System.Data.OracleClient;
using Epower.DevBase.BaseTools;
using Epower.ITSM.Base;
using Epower.DevBase.Organization.SqlDAL;
using Epower.DevBase.Organization.Base;
using System.Text;

namespace Epower.ITSM.SqlDAL
{
    /// <summary>
    /// 
    /// </summary>
    public class Inf_RelDP
    {
        /// <summary>
        /// 
        /// </summary>
        public Inf_RelDP()
        { }

        #region Property
        #region KBID
        /// <summary>
        ///
        /// </summary>
        private Decimal mKBID;
        public Decimal KBID
        {
            get { return mKBID; }
            set { mKBID = value; }
        }
        #endregion

        #region RelID
        /// <summary>
        ///
        /// </summary>
        private Decimal mRelID;
        public Decimal RelID
        {
            get { return mRelID; }
            set { mRelID = value; }
        }
        #endregion

        #region Title
        /// <summary>
        ///
        /// </summary>
        private String mTitle;
        public String Title
        {
            get { return mTitle; }
            set { mTitle = value; }
        }
        #endregion

        #endregion

        #region GetReCorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name="lngID"></param>
        /// <returns>Inf_RelDP</returns>
        public Inf_RelDP GetReCorded(long lngID)
        {
            Inf_RelDP ee = new Inf_RelDP();
            string strSQL = string.Empty;
            OracleConnection cn = ConfigTool.GetConnection();
            strSQL = "SELECT * FROM Inf_Rel WHERE KBID = " + lngID.ToString();
            DataTable dt = OracleDbHelper.ExecuteDataTable(cn, CommandType.Text, strSQL);
            ConfigTool.CloseConnection(cn);
            foreach (DataRow dr in dt.Rows)
            {
                ee.KBID = Decimal.Parse(dr["KBID"].ToString());
                ee.RelID = Decimal.Parse(dr["RelID"].ToString());
                ee.Title = dr["Title"].ToString();
            }
            return ee;
        }
        #endregion

        #region GetDataTable
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sWhere"></param>
        /// <param name="sOrder"></param>
        /// <returns>DataTable</returns>
        public DataTable GetDataTable(string sWhere, string sOrder)
        {
            string strSQL = string.Empty;
            OracleConnection cn = ConfigTool.GetConnection();
            strSQL = "SELECT * FROM Inf_Rel Where 1=1 ";
            strSQL += sWhere;
            strSQL += sOrder;
            DataTable dt = OracleDbHelper.ExecuteDataTable(cn, CommandType.Text, strSQL);
            ConfigTool.CloseConnection(cn);
            return dt;
        }
        #endregion


        #region InsertRecorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name=pInf_RelDP></param>
        public void InsertRecorded(Inf_RelDP pInf_RelDP)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            string strSQL = string.Empty;
            try
            {
                strSQL = @"INSERT INTO Inf_Rel(
									KBID,
									RelID,
									Title
					)
					VALUES( " +
                            pInf_RelDP.KBID.ToString() + "," +
                            pInf_RelDP.RelID.ToString() + "," +
                            StringTool.SqlQ(pInf_RelDP.Title) +
                    ")";

                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion

        #region UpdateRecorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name=pInf_RelDP></param>
        public void UpdateRecorded(Inf_RelDP pInf_RelDP)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            string strSQL = string.Empty;
            try
            {
                strSQL = @"UPDATE Inf_Rel Set " +
                                                        " RelID = " + pInf_RelDP.RelID.ToString() + "," +
                            " Title = " + StringTool.SqlQ(pInf_RelDP.Title) +
                                " WHERE KBID = " + pInf_RelDP.KBID.ToString();

                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion

        #region DeleteRecorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name="lngID"></param>
        public void DeleteRecorded(long lngID)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            try
            {
                string strSQL = "delete Inf_Rel WHERE KBID =" + lngID.ToString();
                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion

        #region 批量保存 SaveItem
        /// <summary>
        /// 批量保存
        /// </summary>
        /// <param name="dt"></param>
        public static void SaveItem(DataTable dt,decimal sKBID)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            cn.Open();
            OracleTransaction trans = cn.BeginTransaction();
            try
            {
                StringBuilder sql = new StringBuilder();
                sql.Append("Delete From Inf_Rel Where KBID=" + sKBID.ToString()+";");
                sql.Append(" commit;");
                foreach (DataRow dr in dt.Rows)
                {
                    sql.Append(" Insert Into Inf_Rel(KBID,RelID,Title) Values(");
                    sql.AppendFormat(sKBID.ToString() + "," + dr["RelID"].ToString() + "," + StringTool.SqlQ(dr["Title"].ToString()) + ");");
                }
                if (!string.IsNullOrEmpty(sql.ToString()))
                {
                    sql.Append(" commit;");

                    OracleDbHelper.ExecuteNonQueryMulti(trans, CommandType.Text, sql.ToString());
                }

                trans.Commit();
            }
            catch (Exception e)
            {
                trans.Rollback();
                throw e;
            }
            finally
            {                
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion 

        #region 新增取得数据
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sArr"></param>
        /// <param name="sKBID"></param>
        /// <returns></returns>
        public static DataTable GetProblemAnalsys(string sArr, string sKBID)
        {
            string sWhere = string.Empty;
            string[] arr = sArr.Split(',');
            if (arr.Length > 1)
                sWhere += " and ID In(";
            for (int i = 0; i < arr.Length - 1; i++)
            {
                if (i != arr.Length - 2)
                    sWhere += arr[i] + ",";
                else
                    sWhere += arr[i] + ")";
            }
            string strSQL = @"select to_number(" + StringTool.SqlQ(sKBID) + ") as KBID,Title,ID as RelID"
                + " from Inf_Information where 1=1 ";
            strSQL += sWhere;
            OracleConnection cn = ConfigTool.GetConnection();
            try
            {
                DataTable dt = OracleDbHelper.ExecuteDataTable(cn, CommandType.Text, strSQL);
                return dt;
            }
            catch (Exception e)
            {
                throw e;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion 
    }
}

