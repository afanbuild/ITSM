/*--------------------------------------------SqlDAL-----------------------------*/

/********************************************************
* Generated By:   zhumc

* Date Generated: 2007Äê11ÔÂ24ÈÕ
* ******************************************************/
using System;
using System.Data;
using System.Data.OracleClient;
using Epower.DevBase.BaseTools;
using Epower.ITSM.Base;
using Epower.DevBase.Organization.SqlDAL;
using Epower.DevBase.Organization.Base;

namespace Epower.ITSM.SqlDAL
{
    /// <summary>
    /// 
    /// </summary>
    public class Br_ContactDP
    {
        /// <summary>
        /// 
        /// </summary>
        public Br_ContactDP()
        { }

        #region Property
        #region ID
        /// <summary>
        ///
        /// </summary>
        private Decimal mID;
        public Decimal ID
        {
            get { return mID; }
            set { mID = value; }
        }
        #endregion

        #region CustomID
        /// <summary>
        ///
        /// </summary>
        private Decimal mCustomID;
        public Decimal CustomID
        {
            get { return mCustomID; }
            set { mCustomID = value; }
        }
        #endregion

        #region CustomName
        /// <summary>
        ///
        /// </summary>
        private String mCustomName = string.Empty;
        public String CustomName
        {
            get { return mCustomName; }
            set { mCustomName = value; }
        }
        #endregion

        #region ContactName
        /// <summary>
        ///
        /// </summary>
        private String mContactName = string.Empty;
        public String ContactName
        {
            get { return mContactName; }
            set { mContactName = value; }
        }
        #endregion

        #region CPosition
        /// <summary>
        ///
        /// </summary>
        private Decimal mCPosition;
        public Decimal CPosition
        {
            get { return mCPosition; }
            set { mCPosition = value; }
        }
        #endregion

        #region CPositionName
        /// <summary>
        ///
        /// </summary>
        private String mCPositionName = string.Empty;
        public String CPositionName
        {
            get { return mCPositionName; }
            set { mCPositionName = value; }
        }
        #endregion

        #region Sex
        /// <summary>
        ///
        /// </summary>
        private Int32 mSex;
        public Int32 Sex
        {
            get { return mSex; }
            set { mSex = value; }
        }
        #endregion

        #region Interest
        /// <summary>
        ///
        /// </summary>
        private String mInterest = string.Empty;
        public String Interest
        {
            get { return mInterest; }
            set { mInterest = value; }
        }
        #endregion

        #region Birthday
        /// <summary>
        ///
        /// </summary>
        private DateTime mBirthday = DateTime.MinValue;
        public DateTime Birthday
        {
            get { return mBirthday; }
            set { mBirthday = value; }
        }
        #endregion

        #region OfficeTel
        /// <summary>
        ///
        /// </summary>
        private String mOfficeTel = string.Empty;
        public String OfficeTel
        {
            get { return mOfficeTel; }
            set { mOfficeTel = value; }
        }
        #endregion

        #region FamilyTel
        /// <summary>
        ///
        /// </summary>
        private String mFamilyTel = string.Empty;
        public String FamilyTel
        {
            get { return mFamilyTel; }
            set { mFamilyTel = value; }
        }
        #endregion

        #region Mobil
        /// <summary>
        ///
        /// </summary>
        private String mMobil = string.Empty;
        public String Mobil
        {
            get { return mMobil; }
            set { mMobil = value; }
        }
        #endregion

        #region EMail
        /// <summary>
        ///
        /// </summary>
        private String mEMail = string.Empty;
        public String EMail
        {
            get { return mEMail; }
            set { mEMail = value; }
        }
        #endregion

        #region Fax
        /// <summary>
        ///
        /// </summary>
        private String mFax = string.Empty;
        public String Fax
        {
            get { return mFax; }
            set { mFax = value; }
        }
        #endregion

        #region QQ
        /// <summary>
        ///
        /// </summary>
        private String mQQ = string.Empty;
        public String QQ
        {
            get { return mQQ; }
            set { mQQ = value; }
        }
        #endregion

        #region Msn
        /// <summary>
        ///
        /// </summary>
        private String mMsn = string.Empty;
        public String Msn
        {
            get { return mMsn; }
            set { mMsn = value; }
        }
        #endregion

        #region Address
        /// <summary>
        ///
        /// </summary>
        private String mAddress = string.Empty;
        public String Address
        {
            get { return mAddress; }
            set { mAddress = value; }
        }
        #endregion

        #region PostNo
        /// <summary>
        ///
        /// </summary>
        private String mPostNo = string.Empty;
        public String PostNo
        {
            get { return mPostNo; }
            set { mPostNo = value; }
        }
        #endregion

        #region Remark
        /// <summary>
        ///
        /// </summary>
        private String mRemark = string.Empty;
        public String Remark
        {
            get { return mRemark; }
            set { mRemark = value; }
        }
        #endregion

        #region Deleted
        /// <summary>
        ///
        /// </summary>
        private Int32 mDeleted;
        public Int32 Deleted
        {
            get { return mDeleted; }
            set { mDeleted = value; }
        }
        #endregion

        #region RegUserID
        /// <summary>
        ///
        /// </summary>
        private Decimal mRegUserID;
        public Decimal RegUserID
        {
            get { return mRegUserID; }
            set { mRegUserID = value; }
        }
        #endregion

        #region RegUserName
        /// <summary>
        ///
        /// </summary>
        private String mRegUserName = string.Empty;
        public String RegUserName
        {
            get { return mRegUserName; }
            set { mRegUserName = value; }
        }
        #endregion

        #region RegDeptID
        /// <summary>
        ///
        /// </summary>
        private Decimal mRegDeptID;
        public Decimal RegDeptID
        {
            get { return mRegDeptID; }
            set { mRegDeptID = value; }
        }
        #endregion

        #region RegDeptName
        /// <summary>
        ///
        /// </summary>
        private String mRegDeptName = string.Empty;
        public String RegDeptName
        {
            get { return mRegDeptName; }
            set { mRegDeptName = value; }
        }
        #endregion

        #region RegTime
        /// <summary>
        ///
        /// </summary>
        private DateTime mRegTime = DateTime.MinValue;
        public DateTime RegTime
        {
            get { return mRegTime; }
            set { mRegTime = value; }
        }
        #endregion

        #endregion

        #region GetReCorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name="lngID"></param>
        /// <returns>Br_ContactDP</returns>
        public Br_ContactDP GetReCorded(long lngID)
        {
            Br_ContactDP ee = new Br_ContactDP();
            string strSQL = string.Empty;
            OracleConnection cn = ConfigTool.GetConnection();
            DataTable dt = null;

            try
            {
                strSQL = "SELECT * FROM Br_Contact WHERE ID = " + lngID.ToString();
                dt = OracleDbHelper.ExecuteDataTable(cn, CommandType.Text, strSQL);                
            }
            finally { ConfigTool.CloseConnection(cn); }

            foreach (DataRow dr in dt.Rows)
            {
                ee.ID = Decimal.Parse(dr["ID"].ToString());
                ee.CustomID = Decimal.Parse(dr["CustomID"].ToString());
                ee.CustomName = dr["CustomName"].ToString();
                ee.ContactName = dr["ContactName"].ToString();
                ee.CPosition = Decimal.Parse(dr["CPosition"].ToString());
                ee.CPositionName = dr["CPositionName"].ToString();
                ee.Sex = Int32.Parse(dr["Sex"].ToString());
                ee.Interest = dr["Interest"].ToString();
                ee.Birthday = dr["Birthday"].ToString() == string.Empty ? DateTime.MinValue : DateTime.Parse(dr["Birthday"].ToString());
                ee.OfficeTel = dr["OfficeTel"].ToString();
                ee.FamilyTel = dr["FamilyTel"].ToString();
                ee.Mobil = dr["Mobil"].ToString();
                ee.EMail = dr["EMail"].ToString();
                ee.Fax = dr["Fax"].ToString();
                ee.QQ = dr["QQ"].ToString();
                ee.Msn = dr["Msn"].ToString();
                ee.Address = dr["Address"].ToString();
                ee.PostNo = dr["PostNo"].ToString();
                ee.Remark = dr["Remark"].ToString();
                ee.Deleted = Int32.Parse(dr["Deleted"].ToString());
                ee.RegUserID = Decimal.Parse(dr["RegUserID"].ToString());
                ee.RegUserName = dr["RegUserName"].ToString();
                ee.RegDeptID = Decimal.Parse(dr["RegDeptID"].ToString());
                ee.RegDeptName = dr["RegDeptName"].ToString();
                ee.RegTime = dr["RegTime"].ToString() == string.Empty ? DateTime.MinValue : DateTime.Parse(dr["RegTime"].ToString());
            }
            return ee;
        }
        #endregion

        #region GetDataTable
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sWhere"></param>
        /// <param name="sOrder"></param>
        /// <returns>DataTable</returns>
        public DataTable GetDataTable(string sWhere, string sOrder)
        {
            string strSQL = string.Empty;
            OracleConnection cn = ConfigTool.GetConnection();

            try
            {
                strSQL = "SELECT * FROM Br_Contact Where 1=1 And Deleted=0";
                strSQL += sWhere;
                strSQL += sOrder;
                DataTable dt = OracleDbHelper.ExecuteDataTable(cn, CommandType.Text, strSQL);                
                return dt;
            }
            finally { ConfigTool.CloseConnection(cn); }
        }
        #endregion


        #region InsertRecorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name=pBr_ContactDP></param>
        public void InsertRecorded(Br_ContactDP pBr_ContactDP)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            string strSQL = string.Empty;
            string strID = "0";
            try
            {
                strID = EpowerGlobal.EPGlobal.GetNextID("Br_ContactID").ToString();
                pBr_ContactDP.ID = decimal.Parse(strID);
                strSQL = @"INSERT INTO Br_Contact(
									ID,
									CustomID,
									CustomName,
									ContactName,
									CPosition,
									CPositionName,
									Sex,
									Interest,
									Birthday,
									OfficeTel,
									FamilyTel,
									Mobil,
									EMail,
									Fax,
									QQ,
									Msn,
									Address,
									PostNo,
									Remark,
									Deleted,
									RegUserID,
									RegUserName,
									RegDeptID,
									RegDeptName,
									RegTime
					)
					VALUES( " +
                            strID.ToString() + "," +
                            pBr_ContactDP.CustomID.ToString() + "," +
                            StringTool.SqlQ(pBr_ContactDP.CustomName) + "," +
                            StringTool.SqlQ(pBr_ContactDP.ContactName) + "," +
                            pBr_ContactDP.CPosition.ToString() + "," +
                            StringTool.SqlQ(pBr_ContactDP.CPositionName) + "," +
                            pBr_ContactDP.Sex.ToString() + "," +
                            StringTool.SqlQ(pBr_ContactDP.Interest) + "," +
                            (pBr_ContactDP.Birthday == DateTime.MinValue ? " null " : "to_date(" + StringTool.SqlQ(pBr_ContactDP.Birthday.ToString()) + ",'yyyy-MM-dd HH24:mi:ss')") + "," +
                            StringTool.SqlQ(pBr_ContactDP.OfficeTel) + "," +
                            StringTool.SqlQ(pBr_ContactDP.FamilyTel) + "," +
                            StringTool.SqlQ(pBr_ContactDP.Mobil) + "," +
                            StringTool.SqlQ(pBr_ContactDP.EMail) + "," +
                            StringTool.SqlQ(pBr_ContactDP.Fax) + "," +
                            StringTool.SqlQ(pBr_ContactDP.QQ) + "," +
                            StringTool.SqlQ(pBr_ContactDP.Msn) + "," +
                            StringTool.SqlQ(pBr_ContactDP.Address) + "," +
                            StringTool.SqlQ(pBr_ContactDP.PostNo) + "," +
                            StringTool.SqlQ(pBr_ContactDP.Remark) + "," +
                            pBr_ContactDP.Deleted.ToString() + "," +
                            pBr_ContactDP.RegUserID.ToString() + "," +
                            StringTool.SqlQ(pBr_ContactDP.RegUserName) + "," +
                            pBr_ContactDP.RegDeptID.ToString() + "," +
                            StringTool.SqlQ(pBr_ContactDP.RegDeptName) + "," +
                            (pBr_ContactDP.RegTime == DateTime.MinValue ? " null " : "to_date(" + StringTool.SqlQ(pBr_ContactDP.RegTime.ToString()) + ",'yyyy-MM-dd HH24:mi:ss')") +
                    ")";

                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion

        #region UpdateRecorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name=pBr_ContactDP></param>
        public void UpdateRecorded(Br_ContactDP pBr_ContactDP)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            string strSQL = string.Empty;
            try
            {
                strSQL = @"UPDATE Br_Contact Set " +
                                                        " CustomID = " + pBr_ContactDP.CustomID.ToString() + "," +
                            " CustomName = " + StringTool.SqlQ(pBr_ContactDP.CustomName) + "," +
                            " ContactName = " + StringTool.SqlQ(pBr_ContactDP.ContactName) + "," +
                            " CPosition = " + pBr_ContactDP.CPosition.ToString() + "," +
                            " CPositionName = " + StringTool.SqlQ(pBr_ContactDP.CPositionName) + "," +
                            " Sex = " + pBr_ContactDP.Sex.ToString() + "," +
                            " Interest = " + StringTool.SqlQ(pBr_ContactDP.Interest) + "," +
                            " Birthday = " + (pBr_ContactDP.Birthday == DateTime.MinValue ? " null " : "to_date(" + StringTool.SqlQ(pBr_ContactDP.Birthday.ToString()) + ",'yyyy-MM-dd HH24:mi:ss')") + "," +
                            " OfficeTel = " + StringTool.SqlQ(pBr_ContactDP.OfficeTel) + "," +
                            " FamilyTel = " + StringTool.SqlQ(pBr_ContactDP.FamilyTel) + "," +
                            " Mobil = " + StringTool.SqlQ(pBr_ContactDP.Mobil) + "," +
                            " EMail = " + StringTool.SqlQ(pBr_ContactDP.EMail) + "," +
                            " Fax = " + StringTool.SqlQ(pBr_ContactDP.Fax) + "," +
                            " QQ = " + StringTool.SqlQ(pBr_ContactDP.QQ) + "," +
                            " Msn = " + StringTool.SqlQ(pBr_ContactDP.Msn) + "," +
                            " Address = " + StringTool.SqlQ(pBr_ContactDP.Address) + "," +
                            " PostNo = " + StringTool.SqlQ(pBr_ContactDP.PostNo) + "," +
                            " Remark = " + StringTool.SqlQ(pBr_ContactDP.Remark) + "," +
                            " Deleted = " + pBr_ContactDP.Deleted.ToString() + "," +
                            " RegUserID = " + pBr_ContactDP.RegUserID.ToString() + "," +
                            " RegUserName = " + StringTool.SqlQ(pBr_ContactDP.RegUserName) + "," +
                            " RegDeptID = " + pBr_ContactDP.RegDeptID.ToString() + "," +
                            " RegDeptName = " + StringTool.SqlQ(pBr_ContactDP.RegDeptName) + "," +
                            " RegTime = " + (pBr_ContactDP.RegTime == DateTime.MinValue ? " null " : "to_date(" + StringTool.SqlQ(pBr_ContactDP.RegTime.ToString()) + ",'yyyy-MM-dd HH24:mi:ss')") +
                                " WHERE ID = " + pBr_ContactDP.ID.ToString();

                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion

        #region DeleteRecorded
        /// <summary>
        /// 
        /// </summary>
        /// <param name="lngID"></param>
        public void DeleteRecorded(long lngID)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            try
            {
                string strSQL = "Update Br_Contact Set Deleted=1  WHERE ID =" + lngID.ToString();
                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion
    }
}

