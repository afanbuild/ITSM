/*--------------------------------------------SqlDAL-----------------------------*/

/********************************************************
* Generated By:   zhumc

* Date Generated: 2007Äê9ÔÂ18ÈÕ
* ******************************************************/
using System;
using System.Data;
using System.Data.OracleClient;
using Epower.DevBase.BaseTools;
using Epower.ITSM.Base;
using Epower.DevBase.Organization.SqlDAL;
using Epower.DevBase.Organization.Base;

namespace Epower.ITSM.SqlDAL
{
    /// <summary>
    /// 
    /// </summary>
    public class Pro_ProvideManageDP
    {
        /// <summary>
        /// 
        /// </summary>
        public Pro_ProvideManageDP()
        { }

        #region Property
        #region
        /// <summary>
        ///
        /// </summary>
        private Decimal mID=0;
        public Decimal ID
        {
            get { return mID; }
            set { mID = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private String mName=string.Empty;
        public String Name
        {
            get { return mName; }
            set { mName = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private String mCode=string.Empty;
        public String Code
        {
            get { return mCode; }
            set { mCode = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private String mContract=string.Empty;
        public String Contract
        {
            get { return mContract; }
            set { mContract = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private String mContractTel = string.Empty;
        public String ContractTel
        {
            get { return mContractTel; }
            set { mContractTel = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private String mAddress = string.Empty;
        public String Address
        {
            get { return mAddress; }
            set { mAddress = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private String mRemark = string.Empty;
        public String Remark
        {
            get { return mRemark; }
            set { mRemark = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private Decimal mDeleted = 0;
        public Decimal Deleted
        {
            get { return mDeleted; }
            set { mDeleted = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private Decimal mRegUserID=0;
        public Decimal RegUserID
        {
            get { return mRegUserID; }
            set { mRegUserID = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private String mRegUserName = string.Empty;
        public String RegUserName
        {
            get { return mRegUserName; }
            set { mRegUserName = value; }
        }
        #endregion

        #region
        /// <summary>
        ///
        /// </summary>
        private DateTime mRegTime=System.DateTime.Now;
        public DateTime RegTime
        {
            get { return mRegTime; }
            set { mRegTime = value; }
        }
        #endregion

        #region ContactLevel
        /// <summary>
        ///
        /// </summary>
        private String mContactLevel = string.Empty;
        public String ContactLevel
        {
            get { return mContactLevel; }
            set { mContactLevel = value; }
        }
        #endregion

        #endregion

        #region
        /// <summary>
        /// 
        /// </summary>
        /// <param name="lngID"></param>
        /// <returns>Pro_ProvideManageDP</returns>
        public Pro_ProvideManageDP GetReCorded(long lngID)
        {
            Pro_ProvideManageDP ee = new Pro_ProvideManageDP();
            string strSQL = string.Empty;
            OracleConnection cn = ConfigTool.GetConnection();
            strSQL = "SELECT * FROM Pro_ProvideManage WHERE ID = " + lngID.ToString();
            DataTable dt = OracleDbHelper.ExecuteDataTable(cn, CommandType.Text, strSQL);
            ConfigTool.CloseConnection(cn);
            foreach (DataRow dr in dt.Rows)
            {
                ee.ID = Decimal.Parse(dr["ID"].ToString());
                ee.Name = dr["Name"].ToString();
                ee.Code = dr["Code"].ToString();
                ee.Contract = dr["Contract"].ToString();
                ee.ContractTel = dr["ContractTel"].ToString();
                ee.Address = dr["Address"].ToString();
                ee.Remark = dr["Remark"].ToString();
                ee.ContactLevel = dr["ContactLevel"].ToString();
                ee.Deleted = Decimal.Parse(dr["Deleted"].ToString());
                ee.RegUserID = Decimal.Parse(dr["RegUserID"].ToString());
                ee.RegUserName = dr["RegUserName"].ToString();
                ee.RegTime = DateTime.Parse(dr["RegTime"].ToString());
            }
            return ee;
        }
        #endregion

        #region
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sWhere"></param>
        /// <param name="sOrder"></param>
        /// <returns>DataTable</returns>
        public DataTable GetDataTable(string sWhere, string sOrder)
        {
            string strSQL = string.Empty;
            OracleConnection cn = ConfigTool.GetConnection();
            strSQL = "SELECT * FROM Pro_ProvideManage Where 1=1 And Deleted=0 ";
            strSQL += sWhere;
            strSQL += sOrder;
            DataTable dt = OracleDbHelper.ExecuteDataTable(cn, CommandType.Text, strSQL);
            ConfigTool.CloseConnection(cn);
            return dt;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="sWhere"></param>
        /// <param name="pagesize"></param>
        /// <param name="pageindex"></param>
        /// <param name="rowcount"></param>
        /// <returns></returns>
        public DataTable GetDataTable(string sWhere, int pagesize, int pageindex, ref int rowcount)
        {
            string strWhere = string.Empty;
            OracleConnection cn = ConfigTool.GetConnection();
            strWhere += " Deleted=0 " + sWhere;
            DataTable dt = OracleDbHelper.ExecuteDataTable(cn, "Pro_ProvideManage", "*", " ORDER BY ID DESC", pagesize, pageindex, strWhere, ref rowcount);
            ConfigTool.CloseConnection(cn);
            return dt;
        }
        #endregion


        #region
        /// <summary>
        /// 
        /// </summary>
        /// <param name=pPro_ProvideManageDP></param>
        public void InsertRecorded(Pro_ProvideManageDP pPro_ProvideManageDP)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            string strSQL = string.Empty;
            string strID = "0";
            try
            {
                strID = EpowerGlobal.EPGlobal.GetNextID("Pro_ProvideManageID").ToString();
                pPro_ProvideManageDP.ID = decimal.Parse(strID);
                strSQL = @"INSERT INTO Pro_ProvideManage(
									ID,
									Name,
									Code,
									Contract,
									ContractTel,
									Address,
									Remark,
                                    ContactLevel,
									Deleted,
									RegUserID,
									RegUserName,
									RegTime
					)
					VALUES( " +
                            strID.ToString() + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.Name) + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.Code) + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.Contract) + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.ContractTel) + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.Address) + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.Remark) + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.ContactLevel) + "," +
                            pPro_ProvideManageDP.Deleted.ToString() + "," +
                            pPro_ProvideManageDP.RegUserID.ToString() + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.RegUserName) + "," +
                            StringTool.SqlQ(pPro_ProvideManageDP.RegTime.ToString()) +
                    ")";

                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion

        #region
        /// <summary>
        /// 
        /// </summary>
        /// <param name=pPro_ProvideManageDP></param>
        public void UpdateRecorded(Pro_ProvideManageDP pPro_ProvideManageDP)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            string strSQL = string.Empty;
            try
            {
                strSQL = @"UPDATE Pro_ProvideManage Set " +
                                                        " Name = " + StringTool.SqlQ(pPro_ProvideManageDP.Name) + "," +
                            " Code = " + StringTool.SqlQ(pPro_ProvideManageDP.Code) + "," +
                            " Contract = " + StringTool.SqlQ(pPro_ProvideManageDP.Contract) + "," +
                            " ContractTel = " + StringTool.SqlQ(pPro_ProvideManageDP.ContractTel) + "," +
                            " Address = " + StringTool.SqlQ(pPro_ProvideManageDP.Address) + "," +
                            " Remark = " + StringTool.SqlQ(pPro_ProvideManageDP.Remark) + "," +
                            " ContactLevel = " + StringTool.SqlQ(pPro_ProvideManageDP.ContactLevel) + "," +
                            " Deleted = " + pPro_ProvideManageDP.Deleted.ToString() + "," +
                            " RegUserID = " + pPro_ProvideManageDP.RegUserID.ToString() + "," +
                            " RegUserName = " + StringTool.SqlQ(pPro_ProvideManageDP.RegUserName) + "," +
                            " RegTime = " + StringTool.SqlQ(pPro_ProvideManageDP.RegTime.ToString()) +
                                " WHERE ID = " + pPro_ProvideManageDP.ID.ToString();

                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion

        #region
        /// <summary>
        /// 
        /// </summary>
        /// <param name="lngID"></param>
        public void DeleteRecorded(long lngID)
        {
            OracleConnection cn = ConfigTool.GetConnection();
            try
            {
                string strSQL = "Update Pro_ProvideManage Set Deleted=1  WHERE ID =" + lngID.ToString();
                OracleDbHelper.ExecuteNonQuery(cn, CommandType.Text, strSQL);
            }
            catch
            {
                throw;
            }
            finally
            {
                ConfigTool.CloseConnection(cn);
            }
        }
        #endregion
    }
}

