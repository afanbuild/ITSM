/********************************************************
* Generated By:   zhumc
* 
*
* 
* 
* 
* Date Generated: 2010年8月17日* ******************************************************/
using System;
using System.Collections.Generic;
//using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Xml;
using System.Data;

using Epower.DevBase.BaseTools;
using Epower.ITSM.Base;
using appDataProcess;
using Epower.ITSM.SqlDAL;
using EpowerCom;

namespace Epower.ITSM.Web.AppForms
{
    public partial class frm_App_DefineData : BasePage
    {
        /// <summary>
        /// myFlowForms
        /// </summary>
        private FlowForms myFlowForms;

        #region Page_Load
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void Page_Load(object sender, EventArgs e)
        {
            myFlowForms = (FlowForms)this.Master;

            myFlowForms.mySetContentReadOnly += new FlowForms.DoContentActions(Master_mySetContentVisible);
            myFlowForms.myGetFormsValue += new FlowForms.GetFormsValue(Master_myGetFormsValue);
            myFlowForms.mySetFormsValue += new FlowForms.DoContentActions(Master_mySetFormsValue);
            myFlowForms.blnSMSNotify = false;
            myFlowForms.blnShowFlowOP = false;
            if (!IsPostBack)
            {
            }
            else
            {
                if (hidContent.Value.Trim() != string.Empty)
                {
                    lblContent.Text = hidContent.Value;
                }
            }
        }
        #endregion

        #region Master_mySetFormsValue
        /// <summary>
        /// 
        /// </summary>
        private void Master_mySetFormsValue()
        {
            myFlowForms.FormTitle = myFlowForms.oFlow.FlowName;
            #region Master_mySetFormsValue
            ImplDataProcess dp = new ImplDataProcess(myFlowForms.oFlow.AppID);
            DataTable dt = dp.GetFieldsDataTable(myFlowForms.oFlow.FlowID, myFlowForms.oFlow.OpID);
            if (dt != null)
            {
                if (dt.Rows.Count > 0)
                {
                    DataRow row = dt.Rows[0];
                    labApplyName.Text = row["ApplyName"].ToString();
                    labDeptName.Text = row["DeptName"].ToString();
                    ViewState["ApplyID"] = row["ApplyID"].ToString();
                    ViewState["DeptID"] = row["DeptID"].ToString();
                    CtrFlowFlowName.Value = row["FlowName"].ToString();
                    if (row["StartDate"].ToString() != "")
                    {
                        labStartDate.Text = DateTime.Parse(row["StartDate"].ToString()).ToString("yyyy-MM-dd H:mm:ss");
                    }
                    else
                    {
                        labStartDate.Text = "";
                    }

                    if (row["EndDate"].ToString() == "")
                    {
                        labEndDate.Text = "--";
                    }
                    else
                    {
                        labEndDate.Text = DateTime.Parse(row["EndDate"].ToString()).ToString("yyyy-MM-dd H:mm:ss");
                    }
                    lblContent.Text = row["ContentXml"].ToString();
                }
                else
                {
                    labApplyName.Text = Session["PersonName"].ToString();
                    labDeptName.Text = Session["UserDeptName"].ToString();
                    labStartDate.Text = DateTime.Now.ToString("yyyy-MM-dd H:mm:ss");
                    ViewState["ApplyID"] = Session["UserID"].ToString();
                    ViewState["DeptID"] = Session["UserDeptID"].ToString();

                    App_DefinePageDP ee = new App_DefinePageDP();
                    ee = ee.GetReCorded(myFlowForms.oFlow.FlowModelID);
                    lblContent.Text = ee.ContentXml;

                    //替换各种宏控件                    this.lblContent.Text = this.lblContent.Text.Replace("宏控件-用户部门", Session["UserDeptName"].ToString());
                    this.lblContent.Text = this.lblContent.Text.Replace("宏控件-用户姓名", Session["PersonName"].ToString());
                    this.lblContent.Text = this.lblContent.Text.Replace("宏控件-当前时间(日期)", DateTime.Now.ToShortDateString());
                }
            }
            #endregion

            #region set visible
            setFieldCollection setFields = myFlowForms.oFlow.setFields;
            foreach (setField sf in setFields)
            {
                if (sf.Editable == true && sf.Visibled == true)
                {
                    continue;
                }
                switch (sf.Name.ToLower())
                {
                    default:
                        break;

                }
            }
            #endregion
        }
        #endregion

        #region Master_mySetContentVisible
        /// <summary>
        /// 
        /// </summary>
        private void Master_mySetContentVisible()
        {
            #region Master_mySetContentVisible
            CtrFlowFlowName.ContralState = eOA_FlowControlState.eReadOnly;
            #endregion
        }
        #endregion

        #region Master_myGetFormsValue
        /// <summary>
        /// 
        /// </summary>
        /// <param name="lngActionID"></param>
        /// <param name="strActionName"></param>
        /// <returns></returns>
        private XmlDocument Master_myGetFormsValue(long lngActionID, string strActionName)
        {
            #region Master_myGetFormsValue
            FieldValues fv = new FieldValues();
            fv.Add("flowname", CtrFlowFlowName.Value.Trim());
            fv.Add("startdate", labStartDate.Text.Trim());
            fv.Add("applyname", labApplyName.Text.Trim());
            fv.Add("deptname", labDeptName.Text.Trim());
            fv.Add("applyid", ViewState["ApplyID"].ToString());
            fv.Add("deptid", ViewState["DeptID"].ToString());
            fv.Add("contentxml", hidContent.Value.Trim());
            XmlDocument xmlDoc = fv.GetXmlObject();
            #endregion
            return xmlDoc;
        }
        #endregion
    }
}
